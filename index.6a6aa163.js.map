{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar gameScore = document.querySelector(\".game-score\");\nvar startButton = document.querySelector(\".start\");\nvar fieldCells = document.querySelectorAll(\".field-cell\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageStart = document.querySelector(\".message-start\");\nvar score = 0;\nvar gameField = [];\nfunction startGame() {\n    score = 0;\n    startButton.textContent = \"Restart\";\n    startButton.classList.remove(\"start\");\n    startButton.classList.add(\"restart\");\n    gameScore.textContent = score;\n    messageLose.classList.add(\"hidden\");\n    messageWin.classList.add(\"hidden\");\n    messageStart.classList.add(\"hidden\");\n    gameField = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    generateNewNumber();\n    generateNewNumber();\n}\nfunction generateNewNumber() {\n    var emptyCells = [];\n    for(var row = 0; row < 4; row++){\n        for(var col = 0; col < 4; col++)if (gameField[row][col] === 0) emptyCells.push({\n            row: row,\n            col: col\n        });\n    }\n    if (emptyCells.length > 0) {\n        var randomC = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n        gameField[randomC.row][randomC.col] = Math.random() < 0.9 ? 2 : 4;\n    }\n    for(var i = 0; i < fieldCells.length; i++){\n        var row1 = Math.floor(i / 4);\n        var col1 = i % 4;\n        fieldCells[i].textContent = gameField[row1][col1] === 0 ? \"\" : gameField[row1][col1];\n        fieldCells[i].className = \"field-cell\";\n        if (gameField[row1][col1] !== 0) fieldCells[i].classList.add(\"field-cell--\".concat(gameField[row1][col1]));\n    }\n    gameScore.textContent = score;\n}\nfunction moveUp() {\n    var moved = false;\n    for(var col = 0; col < 4; col++){\n        for(var row = 1; row < 4; row++)if (gameField[row][col] !== 0) {\n            var currentRow = row;\n            while(currentRow > 0 && gameField[currentRow - 1][col] === 0){\n                gameField[currentRow - 1][col] = gameField[currentRow][col];\n                gameField[currentRow][col] = 0;\n                currentRow--;\n                moved = true;\n            }\n            if (currentRow > 0 && gameField[currentRow - 1][col] === gameField[currentRow][col]) {\n                gameField[currentRow - 1][col] *= 2;\n                score += gameField[currentRow - 1][col];\n                gameField[currentRow][col] = 0;\n                moved = true;\n            }\n        }\n    }\n    return moved;\n}\nfunction moveDown() {\n    var moved = false;\n    for(var col = 0; col < 4; col++){\n        for(var row = 2; row >= 0; row--)if (gameField[row][col] !== 0) {\n            var currentRow = row;\n            while(currentRow < 3 && gameField[currentRow + 1][col] === 0){\n                gameField[currentRow + 1][col] = gameField[currentRow][col];\n                gameField[currentRow][col] = 0;\n                currentRow++;\n                moved = true;\n            }\n            if (currentRow < 3 && gameField[currentRow + 1][col] === gameField[currentRow][col]) {\n                gameField[currentRow + 1][col] *= 2;\n                score += gameField[currentRow + 1][col];\n                gameField[currentRow][col] = 0;\n                moved = true;\n            }\n        }\n    }\n    return moved;\n}\nfunction moveRight() {\n    var moved = false;\n    for(var row = 0; row < 4; row++){\n        for(var col = 2; col >= 0; col--)if (gameField[row][col] !== 0) {\n            var currentCol = col;\n            while(currentCol < 3 && gameField[row][currentCol + 1] === 0){\n                gameField[row][currentCol + 1] = gameField[row][currentCol];\n                gameField[row][currentCol] = 0;\n                currentCol++;\n                moved = true;\n            }\n            if (currentCol < 3 && gameField[row][currentCol + 1] === gameField[row][currentCol]) {\n                gameField[row][currentCol + 1] *= 2;\n                score += gameField[row][currentCol + 1];\n                gameField[row][currentCol] = 0;\n                moved = true;\n            }\n        }\n    }\n    return moved;\n}\nfunction moveLeft() {\n    var moved = false;\n    for(var row = 0; row < 4; row++){\n        for(var col = 1; col <= 3; col++)if (gameField[row][col] !== 0) {\n            var currentCol = col;\n            while(currentCol > 0 && gameField[row][currentCol - 1] === 0){\n                gameField[row][currentCol - 1] = gameField[row][currentCol];\n                gameField[row][currentCol] = 0;\n                currentCol--;\n                moved = true;\n            }\n            if (currentCol > 0 && gameField[row][currentCol - 1] === gameField[row][currentCol]) {\n                gameField[row][currentCol - 1] *= 2;\n                score += gameField[row][currentCol - 1];\n                gameField[row][currentCol] = 0;\n                moved = true;\n            }\n        }\n    }\n    return moved;\n}\nfunction checkGameOver() {\n    for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n        if (gameField[row][col] === 0) return false;\n        if (row < 3 && gameField[row][col] === gameField[row + 1][col]) return false;\n        if (col < 3 && gameField[row][col] === gameField[row][col + 1]) return false;\n    }\n    return true;\n}\nfunction checkWin() {\n    for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n        if (gameField[row][col] === 2048) return true;\n    }\n    return false;\n}\nstartButton.addEventListener(\"click\", function() {\n    startGame();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    var moved = false;\n    switch(e.key){\n        case \"ArrowUp\":\n            moved = moveUp();\n            break;\n        case \"ArrowDown\":\n            moved = moveDown();\n            break;\n        case \"ArrowRight\":\n            moved = moveRight();\n            break;\n        case \"ArrowLeft\":\n            moved = moveLeft();\n            break;\n    }\n    if (moved) generateNewNumber();\n    if (checkGameOver()) messageLose.classList.remove(\"hidden\");\n    else if (checkWin()) {\n        messageLose.classList.add(\"hidden\");\n        messageWin.classList.remove(\"hidden\");\n    }\n});\n\n//# sourceMappingURL=index.6a6aa163.js.map\n","'use strict';\n\nconst gameScore = document.querySelector('.game-score');\nconst startButton = document.querySelector('.start');\nconst fieldCells = document.querySelectorAll('.field-cell');\n\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nlet score = 0;\nlet gameField = [];\n\nfunction startGame() {\n  score = 0;\n  startButton.textContent = 'Restart';\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  gameScore.textContent = score;\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  generateNewNumber();\n  generateNewNumber();\n}\n\nfunction generateNewNumber() {\n  const emptyCells = [];\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      if (gameField[row][col] === 0) {\n        emptyCells.push({\n          row,\n          col,\n        });\n      }\n    }\n  }\n\n  if (emptyCells.length > 0) {\n    const randomC = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    gameField[randomC.row][randomC.col] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  for (let i = 0; i < fieldCells.length; i++) {\n    const row = Math.floor(i / 4);\n    const col = i % 4;\n\n    fieldCells[i].textContent\n      = gameField[row][col] === 0 ? '' : gameField[row][col];\n\n    fieldCells[i].className = 'field-cell';\n\n    if (gameField[row][col] !== 0) {\n      fieldCells[i].classList.add(\n        `field-cell--${gameField[row][col]}`,\n      );\n    }\n  }\n\n  gameScore.textContent = score;\n}\n\nfunction moveUp() {\n  let moved = false;\n\n  for (let col = 0; col < 4; col++) {\n    for (let row = 1; row < 4; row++) {\n      if (gameField[row][col] !== 0) {\n        let currentRow = row;\n\n        while (currentRow > 0 && gameField[currentRow - 1][col] === 0) {\n          gameField[currentRow - 1][col] = gameField[currentRow][col];\n          gameField[currentRow][col] = 0;\n          currentRow--;\n          moved = true;\n        }\n\n        if (\n          currentRow > 0\n          && gameField[currentRow - 1][col] === gameField[currentRow][col]\n        ) {\n          gameField[currentRow - 1][col] *= 2;\n          score += gameField[currentRow - 1][col];\n          gameField[currentRow][col] = 0;\n          moved = true;\n        }\n      }\n    }\n  }\n\n  return moved;\n}\n\nfunction moveDown() {\n  let moved = false;\n\n  for (let col = 0; col < 4; col++) {\n    for (let row = 2; row >= 0; row--) {\n      if (gameField[row][col] !== 0) {\n        let currentRow = row;\n\n        while (currentRow < 3 && gameField[currentRow + 1][col] === 0) {\n          gameField[currentRow + 1][col] = gameField[currentRow][col];\n          gameField[currentRow][col] = 0;\n          currentRow++;\n          moved = true;\n        }\n\n        if (\n          currentRow < 3\n          && gameField[currentRow + 1][col] === gameField[currentRow][col]\n        ) {\n          gameField[currentRow + 1][col] *= 2;\n          score += gameField[currentRow + 1][col];\n          gameField[currentRow][col] = 0;\n          moved = true;\n        }\n      }\n    }\n  }\n\n  return moved;\n}\n\nfunction moveRight() {\n  let moved = false;\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 2; col >= 0; col--) {\n      if (gameField[row][col] !== 0) {\n        let currentCol = col;\n\n        while (currentCol < 3 && gameField[row][currentCol + 1] === 0) {\n          gameField[row][currentCol + 1] = gameField[row][currentCol];\n          gameField[row][currentCol] = 0;\n          currentCol++;\n          moved = true;\n        }\n\n        if (\n          currentCol < 3\n          && gameField[row][currentCol + 1] === gameField[row][currentCol]\n        ) {\n          gameField[row][currentCol + 1] *= 2;\n          score += gameField[row][currentCol + 1];\n          gameField[row][currentCol] = 0;\n          moved = true;\n        }\n      }\n    }\n  }\n\n  return moved;\n}\n\nfunction moveLeft() {\n  let moved = false;\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 1; col <= 3; col++) {\n      if (gameField[row][col] !== 0) {\n        let currentCol = col;\n\n        while (currentCol > 0 && gameField[row][currentCol - 1] === 0) {\n          gameField[row][currentCol - 1] = gameField[row][currentCol];\n          gameField[row][currentCol] = 0;\n          currentCol--;\n          moved = true;\n        }\n\n        if (\n          currentCol > 0\n          && gameField[row][currentCol - 1] === gameField[row][currentCol]\n        ) {\n          gameField[row][currentCol - 1] *= 2;\n          score += gameField[row][currentCol - 1];\n          gameField[row][currentCol] = 0;\n          moved = true;\n        }\n      }\n    }\n  }\n\n  return moved;\n}\n\nfunction checkGameOver() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      if (gameField[row][col] === 0) {\n        return false;\n      }\n\n      if (row < 3 && gameField[row][col] === gameField[row + 1][col]) {\n        return false;\n      }\n\n      if (col < 3 && gameField[row][col] === gameField[row][col + 1]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction checkWin() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      if (gameField[row][col] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nstartButton.addEventListener('click', () => {\n  startGame();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  let moved = false;\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moved = moveUp();\n      break;\n\n    case 'ArrowDown':\n      moved = moveDown();\n      break;\n\n    case 'ArrowRight':\n      moved = moveRight();\n      break;\n\n    case 'ArrowLeft':\n      moved = moveLeft();\n      break;\n  };\n\n  if (moved) {\n    generateNewNumber();\n  }\n\n  if (checkGameOver()) {\n    messageLose.classList.remove('hidden');\n  } else if (checkWin()) {\n    messageLose.classList.add('hidden');\n    messageWin.classList.remove('hidden');\n  }\n});\n"],"names":["gameScore","document","querySelector","startButton","fieldCells","querySelectorAll","messageLose","messageWin","messageStart","score","gameField","generateNewNumber","emptyCells","row","col","push","length","randomC","Math","floor","random","i","row1","col1","textContent","className","classList","add","concat","addEventListener","remove","e","moved","key","moveUp","currentRow","moveDown","moveRight","currentCol","moveLeft","checkGameOver","checkWin"],"version":3,"file":"index.6a6aa163.js.map"}